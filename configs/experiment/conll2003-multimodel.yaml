# @package _global_

# This implements a simple showcase for our idea.
# - task: NER on conll2003
# - included pretrained models:
#   - ner trained on Ontonotes
#   - re trained on Tacred
#   - coreference trained on ???
# - aggregation: mean
#
# Prerequisites:
# - put the pretrained models to models/pretrained (see parameter model.model_paths below)
# - rename the model weight files (*.bin) to pytorch_model.bin, if not yet done
#
# To train, execute:
#
## fast dev run: on cpu, run just for two steps
# python src/train.py experiment=conll2003-multimodel +trainer.fast_dev_run=true
#
## full training on gpu
# python src/train.py experiment=conll2003-multimodel trainer=gpu
#
# The model implementation can be found here: src/models/multi_model_token_classification.py
#
# The config is here: configs/experiments/conll2003-multimodel.yaml (this file)

defaults:
  - override /dataset: conll2003.yaml
  - override /datamodule: default.yaml
  - override /taskmodule: transformer_token_classification.yaml
  - override /model: multi_model_token_classification.yaml
  - override /callbacks: default.yaml
  - override /logger: wandb.yaml
  - override /trainer: default.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

# name of the run determines folder name in logs
name: "conll2003/multi_model_token_classification"

tags: ["dataset=conll2003", "model=multi_model_token_classification"]

seed: 12345

transformer_model: bert-base-cased

taskmodule:
  tokenizer_name_or_path: ${transformer_model}

model:
  pretrained_default_config: ${transformer_model}
  # This should be a mapping from an arbitrary model identifier to a pretrained model name or path
  # that can be loaded with Huggingface AutoModel.from_pretrained.
  pretrained_models:
    bert-base-cased-ner-ontonotes: "models/pretrained/bert-base-cased-ner-ontonotes"
    bert-base-cased-re-tacred: "models/pretrained/bert-base-cased-re-tacred"
    coreference: "models/pretrained/coreference"
  pretrained_configs:
    bert-base-cased-re-tacred:
      vocab_size: 29034
  # freeze_models:
  #  - bert-base-cased-ner-ontonotes

  # configure learning rate. Default learning rate is set in model constructor
  learning_rate: 1e-5

trainer:
  min_epochs: 5
  max_epochs: 20
  # gradient_clip_val: 0.5

datamodule:
  batch_size: 16
